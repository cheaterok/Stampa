Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> funccall
Rule 1     funccall -> IDENTIFIER
Rule 2     funccall -> IDENTIFIER OPENBKT args CLOSEBKT
Rule 3     funccall -> funccall DFLTTEXT STR
Rule 4     funccall -> funccall DFLTFUNC funccall
Rule 5     args -> <empty>
Rule 6     args -> arg
Rule 7     args -> args ARGSEP arg
Rule 8     args -> args arg
Rule 9     args -> args ARGSEP ARGSEP arg
Rule 10    arg -> <empty>
Rule 11    arg -> INT
Rule 12    arg -> FLOAT
Rule 13    arg -> STR
Rule 14    arg -> funccall

Terminals, with rules where they appear

ARGSEP               : 7 9 9
CLOSEBKT             : 2
DFLTFUNC             : 4
DFLTTEXT             : 3
FLOAT                : 12
IDENTIFIER           : 1 2
INT                  : 11
OPENBKT              : 2
STR                  : 3 13
error                : 

Nonterminals, with rules where they appear

arg                  : 6 7 8 9
args                 : 2 7 8 9
funccall             : 3 4 4 14 0

Parsing method: LALR

state 0

    (0) S' -> . funccall
    (1) funccall -> . IDENTIFIER
    (2) funccall -> . IDENTIFIER OPENBKT args CLOSEBKT
    (3) funccall -> . funccall DFLTTEXT STR
    (4) funccall -> . funccall DFLTFUNC funccall

    IDENTIFIER      shift and go to state 2

    funccall                       shift and go to state 1

state 1

    (0) S' -> funccall .
    (3) funccall -> funccall . DFLTTEXT STR
    (4) funccall -> funccall . DFLTFUNC funccall

    DFLTTEXT        shift and go to state 3
    DFLTFUNC        shift and go to state 4


state 2

    (1) funccall -> IDENTIFIER .
    (2) funccall -> IDENTIFIER . OPENBKT args CLOSEBKT

    DFLTTEXT        reduce using rule 1 (funccall -> IDENTIFIER .)
    DFLTFUNC        reduce using rule 1 (funccall -> IDENTIFIER .)
    $end            reduce using rule 1 (funccall -> IDENTIFIER .)
    CLOSEBKT        reduce using rule 1 (funccall -> IDENTIFIER .)
    ARGSEP          reduce using rule 1 (funccall -> IDENTIFIER .)
    INT             reduce using rule 1 (funccall -> IDENTIFIER .)
    FLOAT           reduce using rule 1 (funccall -> IDENTIFIER .)
    STR             reduce using rule 1 (funccall -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 1 (funccall -> IDENTIFIER .)
    OPENBKT         shift and go to state 5


state 3

    (3) funccall -> funccall DFLTTEXT . STR

    STR             shift and go to state 6


state 4

    (4) funccall -> funccall DFLTFUNC . funccall
    (1) funccall -> . IDENTIFIER
    (2) funccall -> . IDENTIFIER OPENBKT args CLOSEBKT
    (3) funccall -> . funccall DFLTTEXT STR
    (4) funccall -> . funccall DFLTFUNC funccall

    IDENTIFIER      shift and go to state 2

    funccall                       shift and go to state 7

state 5

    (2) funccall -> IDENTIFIER OPENBKT . args CLOSEBKT
    (5) args -> .
    (6) args -> . arg
    (7) args -> . args ARGSEP arg
    (8) args -> . args arg
    (9) args -> . args ARGSEP ARGSEP arg
    (10) arg -> .
    (11) arg -> . INT
    (12) arg -> . FLOAT
    (13) arg -> . STR
    (14) arg -> . funccall
    (1) funccall -> . IDENTIFIER
    (2) funccall -> . IDENTIFIER OPENBKT args CLOSEBKT
    (3) funccall -> . funccall DFLTTEXT STR
    (4) funccall -> . funccall DFLTFUNC funccall

  ! reduce/reduce conflict for CLOSEBKT resolved using rule 5 (args -> .)
  ! reduce/reduce conflict for ARGSEP resolved using rule 5 (args -> .)
  ! reduce/reduce conflict for INT resolved using rule 5 (args -> .)
  ! reduce/reduce conflict for FLOAT resolved using rule 5 (args -> .)
  ! reduce/reduce conflict for STR resolved using rule 5 (args -> .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 5 (args -> .)
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STR resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
    CLOSEBKT        reduce using rule 5 (args -> .)
    ARGSEP          reduce using rule 5 (args -> .)
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    STR             shift and go to state 12
    IDENTIFIER      shift and go to state 2

  ! INT             [ reduce using rule 5 (args -> .) ]
  ! FLOAT           [ reduce using rule 5 (args -> .) ]
  ! STR             [ reduce using rule 5 (args -> .) ]
  ! IDENTIFIER      [ reduce using rule 5 (args -> .) ]
  ! CLOSEBKT        [ reduce using rule 10 (arg -> .) ]
  ! ARGSEP          [ reduce using rule 10 (arg -> .) ]
  ! INT             [ reduce using rule 10 (arg -> .) ]
  ! FLOAT           [ reduce using rule 10 (arg -> .) ]
  ! STR             [ reduce using rule 10 (arg -> .) ]
  ! IDENTIFIER      [ reduce using rule 10 (arg -> .) ]

    args                           shift and go to state 8
    arg                            shift and go to state 9
    funccall                       shift and go to state 13

state 6

    (3) funccall -> funccall DFLTTEXT STR .

    DFLTTEXT        reduce using rule 3 (funccall -> funccall DFLTTEXT STR .)
    DFLTFUNC        reduce using rule 3 (funccall -> funccall DFLTTEXT STR .)
    $end            reduce using rule 3 (funccall -> funccall DFLTTEXT STR .)
    CLOSEBKT        reduce using rule 3 (funccall -> funccall DFLTTEXT STR .)
    ARGSEP          reduce using rule 3 (funccall -> funccall DFLTTEXT STR .)
    INT             reduce using rule 3 (funccall -> funccall DFLTTEXT STR .)
    FLOAT           reduce using rule 3 (funccall -> funccall DFLTTEXT STR .)
    STR             reduce using rule 3 (funccall -> funccall DFLTTEXT STR .)
    IDENTIFIER      reduce using rule 3 (funccall -> funccall DFLTTEXT STR .)


state 7

    (4) funccall -> funccall DFLTFUNC funccall .
    (3) funccall -> funccall . DFLTTEXT STR
    (4) funccall -> funccall . DFLTFUNC funccall

  ! shift/reduce conflict for DFLTTEXT resolved as shift
  ! shift/reduce conflict for DFLTFUNC resolved as shift
    $end            reduce using rule 4 (funccall -> funccall DFLTFUNC funccall .)
    CLOSEBKT        reduce using rule 4 (funccall -> funccall DFLTFUNC funccall .)
    ARGSEP          reduce using rule 4 (funccall -> funccall DFLTFUNC funccall .)
    INT             reduce using rule 4 (funccall -> funccall DFLTFUNC funccall .)
    FLOAT           reduce using rule 4 (funccall -> funccall DFLTFUNC funccall .)
    STR             reduce using rule 4 (funccall -> funccall DFLTFUNC funccall .)
    IDENTIFIER      reduce using rule 4 (funccall -> funccall DFLTFUNC funccall .)
    DFLTTEXT        shift and go to state 3
    DFLTFUNC        shift and go to state 4

  ! DFLTTEXT        [ reduce using rule 4 (funccall -> funccall DFLTFUNC funccall .) ]
  ! DFLTFUNC        [ reduce using rule 4 (funccall -> funccall DFLTFUNC funccall .) ]


state 8

    (2) funccall -> IDENTIFIER OPENBKT args . CLOSEBKT
    (7) args -> args . ARGSEP arg
    (8) args -> args . arg
    (9) args -> args . ARGSEP ARGSEP arg
    (10) arg -> .
    (11) arg -> . INT
    (12) arg -> . FLOAT
    (13) arg -> . STR
    (14) arg -> . funccall
    (1) funccall -> . IDENTIFIER
    (2) funccall -> . IDENTIFIER OPENBKT args CLOSEBKT
    (3) funccall -> . funccall DFLTTEXT STR
    (4) funccall -> . funccall DFLTFUNC funccall

  ! shift/reduce conflict for CLOSEBKT resolved as shift
  ! shift/reduce conflict for ARGSEP resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STR resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
    CLOSEBKT        shift and go to state 14
    ARGSEP          shift and go to state 15
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    STR             shift and go to state 12
    IDENTIFIER      shift and go to state 2

  ! CLOSEBKT        [ reduce using rule 10 (arg -> .) ]
  ! ARGSEP          [ reduce using rule 10 (arg -> .) ]
  ! INT             [ reduce using rule 10 (arg -> .) ]
  ! FLOAT           [ reduce using rule 10 (arg -> .) ]
  ! STR             [ reduce using rule 10 (arg -> .) ]
  ! IDENTIFIER      [ reduce using rule 10 (arg -> .) ]

    arg                            shift and go to state 16
    funccall                       shift and go to state 13

state 9

    (6) args -> arg .

    CLOSEBKT        reduce using rule 6 (args -> arg .)
    ARGSEP          reduce using rule 6 (args -> arg .)
    INT             reduce using rule 6 (args -> arg .)
    FLOAT           reduce using rule 6 (args -> arg .)
    STR             reduce using rule 6 (args -> arg .)
    IDENTIFIER      reduce using rule 6 (args -> arg .)


state 10

    (11) arg -> INT .

    CLOSEBKT        reduce using rule 11 (arg -> INT .)
    ARGSEP          reduce using rule 11 (arg -> INT .)
    INT             reduce using rule 11 (arg -> INT .)
    FLOAT           reduce using rule 11 (arg -> INT .)
    STR             reduce using rule 11 (arg -> INT .)
    IDENTIFIER      reduce using rule 11 (arg -> INT .)


state 11

    (12) arg -> FLOAT .

    CLOSEBKT        reduce using rule 12 (arg -> FLOAT .)
    ARGSEP          reduce using rule 12 (arg -> FLOAT .)
    INT             reduce using rule 12 (arg -> FLOAT .)
    FLOAT           reduce using rule 12 (arg -> FLOAT .)
    STR             reduce using rule 12 (arg -> FLOAT .)
    IDENTIFIER      reduce using rule 12 (arg -> FLOAT .)


state 12

    (13) arg -> STR .

    CLOSEBKT        reduce using rule 13 (arg -> STR .)
    ARGSEP          reduce using rule 13 (arg -> STR .)
    INT             reduce using rule 13 (arg -> STR .)
    FLOAT           reduce using rule 13 (arg -> STR .)
    STR             reduce using rule 13 (arg -> STR .)
    IDENTIFIER      reduce using rule 13 (arg -> STR .)


state 13

    (14) arg -> funccall .
    (3) funccall -> funccall . DFLTTEXT STR
    (4) funccall -> funccall . DFLTFUNC funccall

    CLOSEBKT        reduce using rule 14 (arg -> funccall .)
    ARGSEP          reduce using rule 14 (arg -> funccall .)
    INT             reduce using rule 14 (arg -> funccall .)
    FLOAT           reduce using rule 14 (arg -> funccall .)
    STR             reduce using rule 14 (arg -> funccall .)
    IDENTIFIER      reduce using rule 14 (arg -> funccall .)
    DFLTTEXT        shift and go to state 3
    DFLTFUNC        shift and go to state 4


state 14

    (2) funccall -> IDENTIFIER OPENBKT args CLOSEBKT .

    DFLTTEXT        reduce using rule 2 (funccall -> IDENTIFIER OPENBKT args CLOSEBKT .)
    DFLTFUNC        reduce using rule 2 (funccall -> IDENTIFIER OPENBKT args CLOSEBKT .)
    $end            reduce using rule 2 (funccall -> IDENTIFIER OPENBKT args CLOSEBKT .)
    CLOSEBKT        reduce using rule 2 (funccall -> IDENTIFIER OPENBKT args CLOSEBKT .)
    ARGSEP          reduce using rule 2 (funccall -> IDENTIFIER OPENBKT args CLOSEBKT .)
    INT             reduce using rule 2 (funccall -> IDENTIFIER OPENBKT args CLOSEBKT .)
    FLOAT           reduce using rule 2 (funccall -> IDENTIFIER OPENBKT args CLOSEBKT .)
    STR             reduce using rule 2 (funccall -> IDENTIFIER OPENBKT args CLOSEBKT .)
    IDENTIFIER      reduce using rule 2 (funccall -> IDENTIFIER OPENBKT args CLOSEBKT .)


state 15

    (7) args -> args ARGSEP . arg
    (9) args -> args ARGSEP . ARGSEP arg
    (10) arg -> .
    (11) arg -> . INT
    (12) arg -> . FLOAT
    (13) arg -> . STR
    (14) arg -> . funccall
    (1) funccall -> . IDENTIFIER
    (2) funccall -> . IDENTIFIER OPENBKT args CLOSEBKT
    (3) funccall -> . funccall DFLTTEXT STR
    (4) funccall -> . funccall DFLTFUNC funccall

  ! shift/reduce conflict for ARGSEP resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STR resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
    ARGSEP          shift and go to state 17
    CLOSEBKT        reduce using rule 10 (arg -> .)
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    STR             shift and go to state 12
    IDENTIFIER      shift and go to state 2

  ! ARGSEP          [ reduce using rule 10 (arg -> .) ]
  ! INT             [ reduce using rule 10 (arg -> .) ]
  ! FLOAT           [ reduce using rule 10 (arg -> .) ]
  ! STR             [ reduce using rule 10 (arg -> .) ]
  ! IDENTIFIER      [ reduce using rule 10 (arg -> .) ]

    arg                            shift and go to state 18
    funccall                       shift and go to state 13

state 16

    (8) args -> args arg .

    CLOSEBKT        reduce using rule 8 (args -> args arg .)
    ARGSEP          reduce using rule 8 (args -> args arg .)
    INT             reduce using rule 8 (args -> args arg .)
    FLOAT           reduce using rule 8 (args -> args arg .)
    STR             reduce using rule 8 (args -> args arg .)
    IDENTIFIER      reduce using rule 8 (args -> args arg .)


state 17

    (9) args -> args ARGSEP ARGSEP . arg
    (10) arg -> .
    (11) arg -> . INT
    (12) arg -> . FLOAT
    (13) arg -> . STR
    (14) arg -> . funccall
    (1) funccall -> . IDENTIFIER
    (2) funccall -> . IDENTIFIER OPENBKT args CLOSEBKT
    (3) funccall -> . funccall DFLTTEXT STR
    (4) funccall -> . funccall DFLTFUNC funccall

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STR resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
    CLOSEBKT        reduce using rule 10 (arg -> .)
    ARGSEP          reduce using rule 10 (arg -> .)
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    STR             shift and go to state 12
    IDENTIFIER      shift and go to state 2

  ! INT             [ reduce using rule 10 (arg -> .) ]
  ! FLOAT           [ reduce using rule 10 (arg -> .) ]
  ! STR             [ reduce using rule 10 (arg -> .) ]
  ! IDENTIFIER      [ reduce using rule 10 (arg -> .) ]

    arg                            shift and go to state 19
    funccall                       shift and go to state 13

state 18

    (7) args -> args ARGSEP arg .

    CLOSEBKT        reduce using rule 7 (args -> args ARGSEP arg .)
    ARGSEP          reduce using rule 7 (args -> args ARGSEP arg .)
    INT             reduce using rule 7 (args -> args ARGSEP arg .)
    FLOAT           reduce using rule 7 (args -> args ARGSEP arg .)
    STR             reduce using rule 7 (args -> args ARGSEP arg .)
    IDENTIFIER      reduce using rule 7 (args -> args ARGSEP arg .)


state 19

    (9) args -> args ARGSEP ARGSEP arg .

    CLOSEBKT        reduce using rule 9 (args -> args ARGSEP ARGSEP arg .)
    ARGSEP          reduce using rule 9 (args -> args ARGSEP ARGSEP arg .)
    INT             reduce using rule 9 (args -> args ARGSEP ARGSEP arg .)
    FLOAT           reduce using rule 9 (args -> args ARGSEP ARGSEP arg .)
    STR             reduce using rule 9 (args -> args ARGSEP ARGSEP arg .)
    IDENTIFIER      reduce using rule 9 (args -> args ARGSEP ARGSEP arg .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for INT in state 5 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 5 resolved as shift
WARNING: shift/reduce conflict for STR in state 5 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 5 resolved as shift
WARNING: shift/reduce conflict for DFLTTEXT in state 7 resolved as shift
WARNING: shift/reduce conflict for DFLTFUNC in state 7 resolved as shift
WARNING: shift/reduce conflict for CLOSEBKT in state 8 resolved as shift
WARNING: shift/reduce conflict for ARGSEP in state 8 resolved as shift
WARNING: shift/reduce conflict for INT in state 8 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 8 resolved as shift
WARNING: shift/reduce conflict for STR in state 8 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 8 resolved as shift
WARNING: shift/reduce conflict for ARGSEP in state 15 resolved as shift
WARNING: shift/reduce conflict for INT in state 15 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 15 resolved as shift
WARNING: shift/reduce conflict for STR in state 15 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 15 resolved as shift
WARNING: shift/reduce conflict for INT in state 17 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 17 resolved as shift
WARNING: shift/reduce conflict for STR in state 17 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 17 resolved as shift
WARNING: reduce/reduce conflict in state 5 resolved using rule (args -> <empty>)
WARNING: rejected rule (arg -> <empty>) in state 5
